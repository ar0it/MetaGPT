{
    "stdout": "####################################################################################\nPredicting metadata for OME\nChildren: <class 'list'>\ntetset\nPredicting metadata for Project\nTreeNode(model=Project, children=[TreeNode(model=DatasetRef, children=[]), TreeNode(model=AnnotationRef, children=[])])\n####################################################################################\nPredicting metadata for Project\nChildren: <class 'list'>\ntetset\nPredicting metadata for DatasetRef\nTreeNode(model=DatasetRef, children=[])\n####################################################################################\nPredicting metadata for DatasetRef\nChildren: <class 'list'>\nPredicting metadata for DatasetRef, self.object=id='Dataset:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'Dataset:0'}\ntetset\nPredicting metadata for AnnotationRef\nTreeNode(model=AnnotationRef, children=[])\n####################################################################################\nPredicting metadata for AnnotationRef\nChildren: <class 'list'>\nPredicting metadata for AnnotationRef, self.object=id='Annotation:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'Annotation:0'}\nPredicting metadata for Project, self.object=id='Project:0', required=[]\nCurrently running application: OME Metadata Store\ntetset\nPredicting metadata for Dataset\nTreeNode(model=Dataset, children=[TreeNode(model=ImageRef, children=[])])\n####################################################################################\nPredicting metadata for Dataset\nChildren: <class 'list'>\ntetset\nPredicting metadata for ImageRef\nTreeNode(model=ImageRef, children=[])\n####################################################################################\nPredicting metadata for ImageRef\nChildren: <class 'list'>\nPredicting metadata for ImageRef, self.object=id='Image:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'Image:0'}\nPredicting metadata for Dataset, self.object=id='Dataset:1', required=[]\nCurrently running application: OME Metadata Store\ntetset\nPredicting metadata for Folder\nTreeNode(model=Folder, children=[TreeNode(model=FolderRef, children=[]), TreeNode(model=ROIRef, children=[])])\n####################################################################################\nPredicting metadata for Folder\nChildren: <class 'list'>\ntetset\nPredicting metadata for FolderRef\nTreeNode(model=FolderRef, children=[])\n####################################################################################\nPredicting metadata for FolderRef\nChildren: <class 'list'>\nPredicting metadata for FolderRef, self.object=id='Folder:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'Folder:0'}\ntetset\nPredicting metadata for ROIRef\nTreeNode(model=ROIRef, children=[])\n####################################################################################\nPredicting metadata for ROIRef\nChildren: <class 'list'>\nPredicting metadata for ROIRef, self.object=id='lsid:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'lsid:0'}\nPredicting metadata for Folder, self.object=id='Folder:1', required=[]\nCurrently running application: OME Metadata Store\ntetset\nPredicting metadata for Experiment\nTreeNode(model=Experiment, children=[TreeNode(model=MicrobeamManipulation, children=[TreeNode(model=ExperimenterRef, children=[]), TreeNode(model=LightSourceSettings, children=[])])])\n####################################################################################\nPredicting metadata for Experiment\nChildren: <class 'list'>\ntetset\nPredicting metadata for MicrobeamManipulation\nTreeNode(model=MicrobeamManipulation, children=[TreeNode(model=ExperimenterRef, children=[]), TreeNode(model=LightSourceSettings, children=[])])\n####################################################################################\nPredicting metadata for MicrobeamManipulation\nChildren: <class 'list'>\ntetset\nPredicting metadata for ExperimenterRef\nTreeNode(model=ExperimenterRef, children=[])\n####################################################################################\nPredicting metadata for ExperimenterRef\nChildren: <class 'list'>\nPredicting metadata for ExperimenterRef, self.object=id='Experimenter:0', required=[]\nCurrently running application: OME Metadata Store\n{'id': 'Experimenter:0'}\ntetset\nPredicting metadata for LightSourceSettings\nTreeNode(model=LightSourceSettings, children=[])\n####################################################################################\nPredicting metadata for LightSourceSettings\nChildren: <class 'list'>\nPredicting metadata for LightSourceSettings, self.object=id='LightSource:0', required=[]\nCurrently running application: OME Metadata Store\nPredicting metadata for MicrobeamManipulation, self.object=MicrobeamManipulation=None, required=['experimenter_ref']\nCurrently running application: OME Metadata Store\n",
    "stderr": ""
}
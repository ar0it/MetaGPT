# generated by datamodel-codegen:
#   filename:  schema.json
#   timestamp: 2024-05-02T20:44:03+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class A00(BaseModel):
    name: str
    required: bool
    title: str
    type: str


class A10(A00):
    pass


class A01(A00):
    pass


class A11(A00):
    pass


class A02(A00):
    pass


class A12(A00):
    pass


class Properties(BaseModel):
    a00: A00
    a10: A10
    a01: A01
    a11: A11
    a02: A02
    a12: A12


class AffineTransform(BaseModel):
    description: str
    properties: Properties
    required: List[str]
    title: str
    type: str


class Id(BaseModel):
    default: str
    name: str
    pattern: str
    required: bool
    title: str
    type: str


class Properties1(BaseModel):
    id: Id


class AnnotationRef(BaseModel):
    description: str
    properties: Properties1
    title: str
    type: str


class AnyOfItem(BaseModel):
    type: str


class Manufacturer(BaseModel):
    anyOf: List[AnyOfItem]
    default: None
    name: str
    title: str
    type: str


class Model1(Manufacturer):
    pass


class SerialNumber(Manufacturer):
    pass


class LotNumber(Manufacturer):
    pass


class Items(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AnnotationRefs(BaseModel):
    items: Items
    name: str
    namespace: str
    title: str
    type: str


class Power(Manufacturer):
    pass


class AllOfItem(Items):
    pass


class PowerUnit(BaseModel):
    allOf: List[AllOfItem]
    default: str
    name: str
    type: str


class AnyOfItem5(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    type: Optional[str] = None


class Type(BaseModel):
    anyOf: List[AnyOfItem5]
    default: None
    name: str
    type: str


class Properties2(BaseModel):
    manufacturer: Manufacturer
    model: Model1
    serial_number: SerialNumber
    lot_number: LotNumber
    annotation_refs: AnnotationRefs
    id: Id
    power: Power
    power_unit: PowerUnit
    type: Type


class Arc(BaseModel):
    description: str
    properties: Properties2
    title: str
    type: str


class ArcType(BaseModel):
    enum: List[str]
    title: str
    type: str


class Value(BaseModel):
    format: str
    required: bool
    title: str
    type: str


class Compression(PowerUnit):
    pass


class BigEndian(A00):
    pass


class Length(BaseModel):
    min_inclusive: int
    minimum: int
    name: str
    required: bool
    title: str
    type: str


class Properties3(BaseModel):
    value: Value
    compression: Compression
    big_endian: BigEndian
    length: Length


class BinData(BaseModel):
    description: str
    properties: Properties3
    required: List[str]
    title: str
    type: str


class BinDataCompression(ArcType):
    pass


class External(Type):
    pass


class BinData1(Type):
    pass


class FileName(A00):
    pass


class Size(Length):
    pass


class AnyOfItem8(AnyOfItem):
    pass


class MimeType(BaseModel):
    anyOf: List[AnyOfItem8]
    default: None
    name: str
    title: str
    type: str


class Properties4(BaseModel):
    external: External
    bin_data: BinData1
    file_name: FileName
    size: Size
    mime_type: MimeType


class BinaryFile(BaseModel):
    description: str
    properties: Properties4
    required: List[str]
    title: str
    type: str


class MetadataFile(A00):
    pass


class Uuid(BaseModel):
    name: str
    pattern: str
    required: bool
    title: str
    type: str


class Properties5(BaseModel):
    metadata_file: MetadataFile
    uuid: Uuid


class BinaryOnly(BaseModel):
    description: str
    properties: Properties5
    required: List[str]
    title: str
    type: str


class Binning(BaseModel):
    description: str
    enum: List[str]
    title: str
    type: str


class Description(BaseModel):
    anyOf: List[AnyOfItem8]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs1(AnnotationRefs):
    pass


class Namespace(MimeType):
    pass


class AnyOfItem11(BaseModel):
    pattern: Optional[str] = None
    type: str


class Annotator(BaseModel):
    anyOf: List[AnyOfItem11]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Value1(A00):
    pass


class Properties6(BaseModel):
    description: Description
    annotation_refs: AnnotationRefs1
    id: Id
    namespace: Namespace
    annotator: Annotator
    value: Value1


class BooleanAnnotation(BaseModel):
    description: str
    properties: Properties6
    required: List[str]
    title: str
    type: str


class AnyOfItem12(AnyOfItem5):
    pass


class LightSourceSettings(BaseModel):
    anyOf: List[AnyOfItem12]
    default: None
    name: str
    type: str


class DetectorSettings(LightSourceSettings):
    pass


class FilterSetRef(LightSourceSettings):
    pass


class AnnotationRefs2(BaseModel):
    items: Items
    name: str
    title: str
    type: str


class LightPath(LightSourceSettings):
    pass


class AnyOfItem16(AnyOfItem):
    pass


class Name(BaseModel):
    anyOf: List[AnyOfItem16]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem17(BaseModel):
    minimum: Optional[int] = None
    type: str


class SamplesPerPixel(BaseModel):
    anyOf: List[AnyOfItem17]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class AnyOfItem18(AnyOfItem5):
    pass


class IlluminationType(BaseModel):
    anyOf: List[AnyOfItem18]
    default: None
    name: str
    type: str


class AnyOfItem19(AnyOfItem):
    pass


class PinholeSize(BaseModel):
    anyOf: List[AnyOfItem19]
    default: None
    name: str
    title: str
    type: str


class PinholeSizeUnit(PowerUnit):
    pass


class AnyOfItem20(AnyOfItem5):
    pass


class AcquisitionMode(BaseModel):
    anyOf: List[AnyOfItem20]
    default: None
    name: str
    type: str


class ContrastMethod(AcquisitionMode):
    pass


class AnyOfItem22(BaseModel):
    exclusiveMinimum: Optional[float] = None
    type: str


class ExcitationWavelength(BaseModel):
    anyOf: List[AnyOfItem22]
    default: None
    min_exclusive: float
    name: str
    title: str
    type: str


class ExcitationWavelengthUnit(PowerUnit):
    pass


class EmissionWavelength(ExcitationWavelength):
    pass


class EmissionWavelengthUnit(PowerUnit):
    pass


class AnyOfItem24(AnyOfItem):
    pass


class Fluor(BaseModel):
    anyOf: List[AnyOfItem24]
    default: None
    name: str
    title: str
    type: str


class NdFilter(Fluor):
    pass


class PockelCellSetting(Fluor):
    pass


class Color(BaseModel):
    format: str
    name: str
    title: str
    type: str


class Properties7(BaseModel):
    light_source_settings: LightSourceSettings
    detector_settings: DetectorSettings
    filter_set_ref: FilterSetRef
    annotation_refs: AnnotationRefs2
    light_path: LightPath
    id: Id
    name: Name
    samples_per_pixel: SamplesPerPixel
    illumination_type: IlluminationType
    pinhole_size: PinholeSize
    pinhole_size_unit: PinholeSizeUnit
    acquisition_mode: AcquisitionMode
    contrast_method: ContrastMethod
    excitation_wavelength: ExcitationWavelength
    excitation_wavelength_unit: ExcitationWavelengthUnit
    emission_wavelength: EmissionWavelength
    emission_wavelength_unit: EmissionWavelengthUnit
    fluor: Fluor
    nd_filter: NdFilter
    pockel_cell_setting: PockelCellSetting
    color: Color


class Channel(BaseModel):
    description: str
    properties: Properties7
    title: str
    type: str


class ChannelAcquisitionMode(ArcType):
    pass


class ChannelContrastMethod(ArcType):
    pass


class ChannelIlluminationType(ArcType):
    pass


class Description1(BaseModel):
    anyOf: List[AnyOfItem24]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs3(AnnotationRefs):
    pass


class Namespace1(Fluor):
    pass


class AnyOfItem29(AnyOfItem11):
    pass


class Annotator1(BaseModel):
    anyOf: List[AnyOfItem29]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Properties8(BaseModel):
    description: Description1
    annotation_refs: AnnotationRefs3
    id: Id
    namespace: Namespace1
    annotator: Annotator1
    value: Value1


class CommentAnnotation(BaseModel):
    description: str
    properties: Properties8
    required: List[str]
    title: str
    type: str


class AnyOfItem30(AnyOfItem):
    pass


class Description2(BaseModel):
    anyOf: List[AnyOfItem30]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class AnyOfItem31(AnyOfItem5):
    pass


class ExperimenterRef(BaseModel):
    anyOf: List[AnyOfItem31]
    default: None
    name: str
    type: str


class ExperimenterGroupRef(ExperimenterRef):
    pass


class ImageRefs(AnnotationRefs2):
    pass


class AnnotationRefs4(AnnotationRefs2):
    pass


class AnyOfItem33(AnyOfItem):
    pass


class Name1(BaseModel):
    anyOf: List[AnyOfItem33]
    default: None
    name: str
    title: str
    type: str


class Properties9(BaseModel):
    description: Description2
    experimenter_ref: ExperimenterRef
    experimenter_group_ref: ExperimenterGroupRef
    image_refs: ImageRefs
    annotation_refs: AnnotationRefs4
    name: Name1
    id: Id


class Dataset(BaseModel):
    description: str
    properties: Properties9
    title: str
    type: str


class Properties10(Properties1):
    pass


class DatasetRef(BaseModel):
    description: str
    properties: Properties10
    title: str
    type: str


class Manufacturer1(Name1):
    pass


class Model2(Name1):
    pass


class SerialNumber1(Name1):
    pass


class LotNumber1(Name1):
    pass


class AnnotationRefs5(AnnotationRefs2):
    pass


class Gain(Name1):
    pass


class Voltage(Name1):
    pass


class VoltageUnit(PowerUnit):
    pass


class Offset(Name1):
    pass


class Zoom(Name1):
    pass


class AmplificationGain(Name1):
    pass


class AnyOfItem43(AnyOfItem5):
    pass


class Type1(BaseModel):
    anyOf: List[AnyOfItem43]
    default: None
    name: str
    type: str


class Properties11(BaseModel):
    manufacturer: Manufacturer1
    model: Model2
    serial_number: SerialNumber1
    lot_number: LotNumber1
    annotation_refs: AnnotationRefs5
    gain: Gain
    voltage: Voltage
    voltage_unit: VoltageUnit
    offset: Offset
    zoom: Zoom
    amplification_gain: AmplificationGain
    id: Id
    type: Type1


class Detector(BaseModel):
    description: str
    properties: Properties11
    title: str
    type: str


class AnyOfItem44(AnyOfItem):
    pass


class Offset1(BaseModel):
    anyOf: List[AnyOfItem44]
    default: None
    name: str
    title: str
    type: str


class Gain1(Offset1):
    pass


class Voltage1(Offset1):
    pass


class VoltageUnit1(PowerUnit):
    pass


class Zoom1(Offset1):
    pass


class ReadOutRate(Offset1):
    pass


class ReadOutRateUnit(PowerUnit):
    pass


class AnyOfItem49(AnyOfItem5):
    pass


class Binning1(BaseModel):
    anyOf: List[AnyOfItem49]
    default: None
    name: str
    type: str


class AnyOfItem50(AnyOfItem17):
    pass


class Integration(BaseModel):
    anyOf: List[AnyOfItem50]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class Properties12(BaseModel):
    id: Id
    offset: Offset1
    gain: Gain1
    voltage: Voltage1
    voltage_unit: VoltageUnit1
    zoom: Zoom1
    read_out_rate: ReadOutRate
    read_out_rate_unit: ReadOutRateUnit
    binning: Binning1
    integration: Integration


class DetectorSettings1(BaseModel):
    description: str
    properties: Properties12
    title: str
    type: str


class DetectorType(ArcType):
    pass


class AnyOfItem51(AnyOfItem):
    pass


class Manufacturer2(BaseModel):
    anyOf: List[AnyOfItem51]
    default: None
    name: str
    title: str
    type: str


class Model3(Manufacturer2):
    pass


class SerialNumber2(Manufacturer2):
    pass


class LotNumber2(Manufacturer2):
    pass


class AnnotationRefs6(AnnotationRefs2):
    pass


class Properties13(BaseModel):
    manufacturer: Manufacturer2
    model: Model3
    serial_number: SerialNumber2
    lot_number: LotNumber2
    annotation_refs: AnnotationRefs6
    id: Id


class Dichroic(BaseModel):
    description: str
    properties: Properties13
    title: str
    type: str


class Properties14(Properties1):
    pass


class DichroicRef(BaseModel):
    properties: Properties14
    title: str
    type: str


class Description3(BaseModel):
    anyOf: List[AnyOfItem51]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs7(AnnotationRefs):
    pass


class Namespace2(Manufacturer2):
    pass


class AnyOfItem57(AnyOfItem11):
    pass


class Annotator2(BaseModel):
    anyOf: List[AnyOfItem57]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Properties15(BaseModel):
    description: Description3
    annotation_refs: AnnotationRefs7
    id: Id
    namespace: Namespace2
    annotator: Annotator2
    value: Value1


class DoubleAnnotation(BaseModel):
    description: str
    properties: Properties15
    required: List[str]
    title: str
    type: str


class AnyOfItem58(AnyOfItem5):
    pass


class Transform(BaseModel):
    anyOf: List[AnyOfItem58]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs8(AnnotationRefs):
    pass


class AnyOfItem59(BaseModel):
    format: Optional[str] = None
    type: str


class FillColor(BaseModel):
    anyOf: List[AnyOfItem59]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem60(AnyOfItem5):
    pass


class FillRule(BaseModel):
    anyOf: List[AnyOfItem60]
    default: None
    name: str
    type: str


class AnyOfItem61(AnyOfItem59):
    pass


class StrokeColor(BaseModel):
    anyOf: List[AnyOfItem61]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem62(AnyOfItem):
    pass


class StrokeWidth(BaseModel):
    anyOf: List[AnyOfItem62]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit(PowerUnit):
    pass


class StrokeDashArray(StrokeWidth):
    pass


class Text(StrokeWidth):
    pass


class AnyOfItem65(AnyOfItem5):
    pass


class FontFamily(BaseModel):
    anyOf: List[AnyOfItem65]
    default: None
    name: str
    type: str


class AnyOfItem66(AnyOfItem17):
    pass


class FontSize(BaseModel):
    anyOf: List[AnyOfItem66]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit(PowerUnit):
    pass


class AnyOfItem67(AnyOfItem5):
    pass


class FontStyle(BaseModel):
    anyOf: List[AnyOfItem67]
    default: None
    name: str
    type: str


class AnyOfItem68(AnyOfItem):
    pass


class Locked(BaseModel):
    anyOf: List[AnyOfItem68]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem69(AnyOfItem17):
    pass


class TheZ(BaseModel):
    anyOf: List[AnyOfItem69]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT(TheZ):
    pass


class TheC(TheZ):
    pass


class X(A00):
    pass


class Y(A00):
    pass


class RadiusX(A00):
    pass


class RadiusY(A00):
    pass


class Properties16(BaseModel):
    transform: Transform
    annotation_refs: AnnotationRefs8
    fill_color: FillColor
    fill_rule: FillRule
    stroke_color: StrokeColor
    stroke_width: StrokeWidth
    stroke_width_unit: StrokeWidthUnit
    stroke_dash_array: StrokeDashArray
    text: Text
    font_family: FontFamily
    font_size: FontSize
    font_size_unit: FontSizeUnit
    font_style: FontStyle
    locked: Locked
    id: Id
    the_z: TheZ
    the_t: TheT
    the_c: TheC
    x: X
    y: Y
    radius_x: RadiusX
    radius_y: RadiusY


class Ellipse(BaseModel):
    description: str
    properties: Properties16
    required: List[str]
    title: str
    type: str


class AnyOfItem72(AnyOfItem):
    pass


class Description4(BaseModel):
    anyOf: List[AnyOfItem72]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class AnyOfItem73(AnyOfItem5):
    pass


class ExperimenterRef1(BaseModel):
    anyOf: List[AnyOfItem73]
    default: None
    name: str
    type: str


class MicrobeamManipulations(AnnotationRefs2):
    pass


class Type2(BaseModel):
    items: Items
    name: str
    title: str
    tokens: bool
    type: str


class Properties17(BaseModel):
    description: Description4
    experimenter_ref: ExperimenterRef1
    microbeam_manipulations: MicrobeamManipulations
    type: Type2
    id: Id


class Experiment(BaseModel):
    description: str
    properties: Properties17
    title: str
    type: str


class Properties18(Properties1):
    pass


class ExperimentRef(BaseModel):
    properties: Properties18
    title: str
    type: str


class ExperimentValue(ArcType):
    pass


class AnnotationRefs9(AnnotationRefs2):
    pass


class AnyOfItem74(AnyOfItem):
    pass


class FirstName(BaseModel):
    anyOf: List[AnyOfItem74]
    default: None
    name: str
    title: str
    type: str


class MiddleName(FirstName):
    pass


class LastName(FirstName):
    pass


class Email(FirstName):
    pass


class Institution(FirstName):
    pass


class UserName(FirstName):
    pass


class Properties19(BaseModel):
    annotation_refs: AnnotationRefs9
    id: Id
    first_name: FirstName
    middle_name: MiddleName
    last_name: LastName
    email: Email
    institution: Institution
    user_name: UserName


class Experimenter(BaseModel):
    description: str
    properties: Properties19
    title: str
    type: str


class Description5(BaseModel):
    anyOf: List[AnyOfItem74]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class ExperimenterRefs(AnnotationRefs2):
    pass


class Leaders(AnnotationRefs2):
    pass


class AnnotationRefs10(AnnotationRefs2):
    pass


class Name2(FirstName):
    pass


class Properties20(BaseModel):
    description: Description5
    experimenter_refs: ExperimenterRefs
    leaders: Leaders
    annotation_refs: AnnotationRefs10
    name: Name2
    id: Id


class ExperimenterGroup(BaseModel):
    description: str
    properties: Properties20
    title: str
    type: str


class Properties21(Properties1):
    pass


class ExperimenterGroupRef1(BaseModel):
    description: str
    properties: Properties21
    title: str
    type: str


class Properties22(Properties1):
    pass


class ExperimenterRef2(BaseModel):
    description: str
    properties: Properties22
    title: str
    type: str


class Href(BaseModel):
    required: bool
    title: str
    type: str


class Sha1(BaseModel):
    format: str
    length: int
    name: str
    required: bool
    title: str
    type: str


class Compression1(PowerUnit):
    pass


class Properties23(BaseModel):
    href: Href
    sha1: Sha1
    compression: Compression1


class External1(BaseModel):
    description: str
    properties: Properties23
    required: List[str]
    title: str
    type: str


class ExternalCompression(ArcType):
    pass


class Manufacturer3(FirstName):
    pass


class Model4(FirstName):
    pass


class SerialNumber3(FirstName):
    pass


class LotNumber3(FirstName):
    pass


class AnnotationRefs11(AnnotationRefs):
    pass


class Power1(FirstName):
    pass


class PowerUnit1(PowerUnit):
    pass


class AnyOfItem87(AnyOfItem5):
    pass


class Type3(BaseModel):
    anyOf: List[AnyOfItem87]
    default: None
    name: str
    type: str


class Properties24(BaseModel):
    manufacturer: Manufacturer3
    model: Model4
    serial_number: SerialNumber3
    lot_number: LotNumber3
    annotation_refs: AnnotationRefs11
    id: Id
    power: Power1
    power_unit: PowerUnit1
    type: Type3


class Filament(BaseModel):
    description: str
    properties: Properties24
    title: str
    type: str


class FilamentType(ArcType):
    pass


class AnyOfItem88(AnyOfItem):
    pass


class Description6(BaseModel):
    anyOf: List[AnyOfItem88]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs12(AnnotationRefs):
    pass


class Namespace3(BaseModel):
    anyOf: List[AnyOfItem88]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem90(AnyOfItem11):
    pass


class Annotator3(BaseModel):
    anyOf: List[AnyOfItem90]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class BinaryFile1(BaseModel):
    allOf: List[AllOfItem]
    name: str
    required: bool
    type: str


class Properties25(BaseModel):
    description: Description6
    annotation_refs: AnnotationRefs12
    id: Id
    namespace: Namespace3
    annotator: Annotator3
    binary_file: BinaryFile1


class FileAnnotation(BaseModel):
    description: str
    properties: Properties25
    required: List[str]
    title: str
    type: str


class AnyOfItem91(AnyOfItem):
    pass


class Manufacturer4(BaseModel):
    anyOf: List[AnyOfItem91]
    default: None
    name: str
    title: str
    type: str


class Model5(Manufacturer4):
    pass


class SerialNumber4(Manufacturer4):
    pass


class LotNumber4(Manufacturer4):
    pass


class AnyOfItem95(AnyOfItem5):
    pass


class TransmittanceRange(BaseModel):
    anyOf: List[AnyOfItem95]
    default: None
    name: str
    type: str


class AnnotationRefs13(AnnotationRefs2):
    pass


class Type4(TransmittanceRange):
    pass


class AnyOfItem97(AnyOfItem):
    pass


class FilterWheel(BaseModel):
    anyOf: List[AnyOfItem97]
    default: None
    name: str
    title: str
    type: str


class Properties26(BaseModel):
    manufacturer: Manufacturer4
    model: Model5
    serial_number: SerialNumber4
    lot_number: LotNumber4
    transmittance_range: TransmittanceRange
    annotation_refs: AnnotationRefs13
    type: Type4
    filter_wheel: FilterWheel
    id: Id


class Filter(BaseModel):
    description: str
    properties: Properties26
    title: str
    type: str


class Properties27(Properties1):
    pass


class FilterRef(BaseModel):
    properties: Properties27
    title: str
    type: str


class Manufacturer5(FilterWheel):
    pass


class Model6(FilterWheel):
    pass


class SerialNumber5(FilterWheel):
    pass


class LotNumber5(FilterWheel):
    pass


class ExcitationFilters(AnnotationRefs2):
    pass


class AnyOfItem102(AnyOfItem5):
    pass


class DichroicRef1(BaseModel):
    anyOf: List[AnyOfItem102]
    default: None
    name: str
    type: str


class EmissionFilters(AnnotationRefs2):
    pass


class Properties28(BaseModel):
    manufacturer: Manufacturer5
    model: Model6
    serial_number: SerialNumber5
    lot_number: LotNumber5
    excitation_filters: ExcitationFilters
    dichroic_ref: DichroicRef1
    emission_filters: EmissionFilters
    id: Id


class FilterSet(BaseModel):
    description: str
    properties: Properties28
    title: str
    type: str


class Properties29(Properties1):
    pass


class FilterSetRef1(BaseModel):
    properties: Properties29
    title: str
    type: str


class FilterType(ArcType):
    pass


class AnyOfItem103(AnyOfItem):
    pass


class Description7(BaseModel):
    anyOf: List[AnyOfItem103]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class FolderRefs(AnnotationRefs2):
    pass


class ImageRefs1(AnnotationRefs2):
    pass


class RoiRefs(AnnotationRefs2):
    pass


class AnnotationRefs14(AnnotationRefs2):
    pass


class Name3(BaseModel):
    anyOf: List[AnyOfItem103]
    default: None
    name: str
    title: str
    type: str


class Properties30(BaseModel):
    description: Description7
    folder_refs: FolderRefs
    image_refs: ImageRefs1
    roi_refs: RoiRefs
    annotation_refs: AnnotationRefs14
    id: Id
    name: Name3


class Folder(BaseModel):
    description: str
    properties: Properties30
    title: str
    type: str


class Properties31(Properties1):
    pass


class FolderRef(BaseModel):
    description: str
    properties: Properties31
    title: str
    type: str


class Manufacturer6(Name3):
    pass


class Model7(Name3):
    pass


class SerialNumber6(Name3):
    pass


class LotNumber6(Name3):
    pass


class AnnotationRefs15(AnnotationRefs):
    pass


class Power2(Name3):
    pass


class PowerUnit2(PowerUnit):
    pass


class AnyOfItem110(AnyOfItem5):
    pass


class Map(BaseModel):
    anyOf: List[AnyOfItem110]
    default: None
    name: str
    type: str


class Properties32(BaseModel):
    manufacturer: Manufacturer6
    model: Model7
    serial_number: SerialNumber6
    lot_number: LotNumber6
    annotation_refs: AnnotationRefs15
    id: Id
    power: Power2
    power_unit: PowerUnit2
    map: Map


class GenericExcitationSource(BaseModel):
    description: str
    properties: Properties32
    title: str
    type: str


class AnyOfItem111(AnyOfItem59):
    pass


class AcquisitionDate(BaseModel):
    anyOf: List[AnyOfItem111]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem112(AnyOfItem5):
    pass


class ExperimenterRef3(BaseModel):
    anyOf: List[AnyOfItem112]
    default: None
    name: str
    type: str


class AnyOfItem113(AnyOfItem):
    pass


class Description8(BaseModel):
    anyOf: List[AnyOfItem113]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class AnyOfItem114(AnyOfItem5):
    pass


class ExperimentRef1(BaseModel):
    anyOf: List[AnyOfItem114]
    default: None
    name: str
    type: str


class ExperimenterGroupRef2(ExperimentRef1):
    pass


class InstrumentRef(ExperimentRef1):
    pass


class ObjectiveSettings(ExperimentRef1):
    pass


class ImagingEnvironment(ExperimentRef1):
    pass


class StageLabel(ExperimentRef1):
    pass


class Pixels(BinaryFile1):
    pass


class RoiRefs1(AnnotationRefs2):
    pass


class MicrobeamManipulationRefs(AnnotationRefs2):
    pass


class AnnotationRefs16(AnnotationRefs2):
    pass


class AnyOfItem120(AnyOfItem):
    pass


class Name4(BaseModel):
    anyOf: List[AnyOfItem120]
    default: None
    name: str
    title: str
    type: str


class Properties33(BaseModel):
    acquisition_date: AcquisitionDate
    experimenter_ref: ExperimenterRef3
    description: Description8
    experiment_ref: ExperimentRef1
    experimenter_group_ref: ExperimenterGroupRef2
    instrument_ref: InstrumentRef
    objective_settings: ObjectiveSettings
    imaging_environment: ImagingEnvironment
    stage_label: StageLabel
    pixels: Pixels
    roi_refs: RoiRefs1
    microbeam_manipulation_refs: MicrobeamManipulationRefs
    annotation_refs: AnnotationRefs16
    id: Id
    name: Name4


class Image(BaseModel):
    description: str
    properties: Properties33
    required: List[str]
    title: str
    type: str


class Properties34(Properties1):
    pass


class ImageRef(BaseModel):
    description: str
    properties: Properties34
    title: str
    type: str


class AnyOfItem121(AnyOfItem5):
    pass


class Map1(BaseModel):
    anyOf: List[AnyOfItem121]
    default: None
    name: str
    type: str


class AnyOfItem122(AnyOfItem):
    pass


class Temperature(BaseModel):
    anyOf: List[AnyOfItem122]
    default: None
    name: str
    title: str
    type: str


class TemperatureUnit(PowerUnit):
    pass


class AirPressure(Temperature):
    pass


class AirPressureUnit(PowerUnit):
    pass


class AnyOfItem124(BaseModel):
    maximum: Optional[float] = None
    minimum: Optional[float] = None
    type: str


class Humidity(BaseModel):
    anyOf: List[AnyOfItem124]
    default: None
    max_inclusive: float
    min_inclusive: float
    name: str
    title: str
    type: str


class Co2Percent(Humidity):
    pass


class Properties35(BaseModel):
    map: Map1
    temperature: Temperature
    temperature_unit: TemperatureUnit
    air_pressure: AirPressure
    air_pressure_unit: AirPressureUnit
    humidity: Humidity
    co2_percent: Co2Percent


class ImagingEnvironment1(BaseModel):
    description: str
    properties: Properties35
    title: str
    type: str


class AnyOfItem126(AnyOfItem5):
    pass


class Microscope(BaseModel):
    anyOf: List[AnyOfItem126]
    default: None
    name: str
    type: str


class GenericExcitationSources(AnnotationRefs2):
    pass


class LightEmittingDiodes(AnnotationRefs2):
    pass


class Filaments(AnnotationRefs2):
    pass


class Arcs(AnnotationRefs2):
    pass


class Lasers(AnnotationRefs2):
    pass


class Detectors(AnnotationRefs2):
    pass


class Objectives(AnnotationRefs2):
    pass


class FilterSets(AnnotationRefs2):
    pass


class Filters(AnnotationRefs2):
    pass


class Dichroics(AnnotationRefs2):
    pass


class AnnotationRefs17(AnnotationRefs2):
    pass


class Properties36(BaseModel):
    microscope: Microscope
    generic_excitation_sources: GenericExcitationSources
    light_emitting_diodes: LightEmittingDiodes
    filaments: Filaments
    arcs: Arcs
    lasers: Lasers
    detectors: Detectors
    objectives: Objectives
    filter_sets: FilterSets
    filters: Filters
    dichroics: Dichroics
    annotation_refs: AnnotationRefs17
    id: Id


class Instrument(BaseModel):
    description: str
    properties: Properties36
    title: str
    type: str


class Properties37(Properties1):
    pass


class InstrumentRef1(BaseModel):
    description: str
    properties: Properties37
    title: str
    type: str


class Transform1(BaseModel):
    anyOf: List[AnyOfItem126]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs18(AnnotationRefs):
    pass


class AnyOfItem128(AnyOfItem59):
    pass


class FillColor1(BaseModel):
    anyOf: List[AnyOfItem128]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem129(AnyOfItem5):
    pass


class FillRule1(BaseModel):
    anyOf: List[AnyOfItem129]
    default: None
    name: str
    type: str


class AnyOfItem130(AnyOfItem59):
    pass


class StrokeColor1(BaseModel):
    anyOf: List[AnyOfItem130]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem131(AnyOfItem):
    pass


class StrokeWidth1(BaseModel):
    anyOf: List[AnyOfItem131]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit1(PowerUnit):
    pass


class StrokeDashArray1(StrokeWidth1):
    pass


class Text1(StrokeWidth1):
    pass


class AnyOfItem134(AnyOfItem5):
    pass


class FontFamily1(BaseModel):
    anyOf: List[AnyOfItem134]
    default: None
    name: str
    type: str


class AnyOfItem135(AnyOfItem17):
    pass


class FontSize1(BaseModel):
    anyOf: List[AnyOfItem135]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit1(PowerUnit):
    pass


class AnyOfItem136(AnyOfItem5):
    pass


class FontStyle1(BaseModel):
    anyOf: List[AnyOfItem136]
    default: None
    name: str
    type: str


class AnyOfItem137(AnyOfItem):
    pass


class Locked1(BaseModel):
    anyOf: List[AnyOfItem137]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem138(AnyOfItem17):
    pass


class TheZ1(BaseModel):
    anyOf: List[AnyOfItem138]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT1(TheZ1):
    pass


class TheC1(TheZ1):
    pass


class Properties38(BaseModel):
    transform: Transform1
    annotation_refs: AnnotationRefs18
    fill_color: FillColor1
    fill_rule: FillRule1
    stroke_color: StrokeColor1
    stroke_width: StrokeWidth1
    stroke_width_unit: StrokeWidthUnit1
    stroke_dash_array: StrokeDashArray1
    text: Text1
    font_family: FontFamily1
    font_size: FontSize1
    font_size_unit: FontSizeUnit1
    font_style: FontStyle1
    locked: Locked1
    id: Id
    the_z: TheZ1
    the_t: TheT1
    the_c: TheC1
    x: X
    y: Y


class Label(BaseModel):
    description: str
    properties: Properties38
    required: List[str]
    title: str
    type: str


class AnyOfItem141(AnyOfItem):
    pass


class Manufacturer7(BaseModel):
    anyOf: List[AnyOfItem141]
    default: None
    name: str
    title: str
    type: str


class Model8(Manufacturer7):
    pass


class SerialNumber7(Manufacturer7):
    pass


class LotNumber7(Manufacturer7):
    pass


class AnnotationRefs19(AnnotationRefs):
    pass


class Power3(Manufacturer7):
    pass


class PowerUnit3(PowerUnit):
    pass


class AnyOfItem146(AnyOfItem5):
    pass


class Pump(BaseModel):
    anyOf: List[AnyOfItem146]
    default: None
    name: str
    type: str


class Type5(Pump):
    pass


class LaserMedium(Pump):
    pass


class AnyOfItem149(AnyOfItem22):
    pass


class Wavelength(BaseModel):
    anyOf: List[AnyOfItem149]
    default: None
    min_exclusive: float
    name: str
    title: str
    type: str


class WavelengthUnit(PowerUnit):
    pass


class AnyOfItem150(AnyOfItem17):
    pass


class FrequencyMultiplication(BaseModel):
    anyOf: List[AnyOfItem150]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class AnyOfItem151(AnyOfItem):
    pass


class Tuneable(BaseModel):
    anyOf: List[AnyOfItem151]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem152(AnyOfItem5):
    pass


class Pulse(BaseModel):
    anyOf: List[AnyOfItem152]
    default: None
    name: str
    type: str


class AnyOfItem153(AnyOfItem):
    pass


class PockelCell(BaseModel):
    anyOf: List[AnyOfItem153]
    default: None
    name: str
    title: str
    type: str


class RepetitionRate(PockelCell):
    pass


class RepetitionRateUnit(PowerUnit):
    pass


class Properties39(BaseModel):
    manufacturer: Manufacturer7
    model: Model8
    serial_number: SerialNumber7
    lot_number: LotNumber7
    annotation_refs: AnnotationRefs19
    id: Id
    power: Power3
    power_unit: PowerUnit3
    pump: Pump
    type: Type5
    laser_medium: LaserMedium
    wavelength: Wavelength
    wavelength_unit: WavelengthUnit
    frequency_multiplication: FrequencyMultiplication
    tuneable: Tuneable
    pulse: Pulse
    pockel_cell: PockelCell
    repetition_rate: RepetitionRate
    repetition_rate_unit: RepetitionRateUnit


class Laser(BaseModel):
    description: str
    properties: Properties39
    title: str
    type: str


class LaserLaserMedium(ArcType):
    pass


class LaserPulse(ArcType):
    pass


class LaserType(ArcType):
    pass


class Properties40(Properties1):
    pass


class Leader(BaseModel):
    description: str
    properties: Properties40
    title: str
    type: str


class Manufacturer8(PockelCell):
    pass


class Model9(PockelCell):
    pass


class SerialNumber8(PockelCell):
    pass


class LotNumber8(PockelCell):
    pass


class AnnotationRefs20(AnnotationRefs):
    pass


class Power4(PockelCell):
    pass


class PowerUnit4(PowerUnit):
    pass


class Properties41(BaseModel):
    manufacturer: Manufacturer8
    model: Model9
    serial_number: SerialNumber8
    lot_number: LotNumber8
    annotation_refs: AnnotationRefs20
    id: Id
    power: Power4
    power_unit: PowerUnit4


class LightEmittingDiode(BaseModel):
    description: str
    properties: Properties41
    title: str
    type: str


class ExcitationFilters1(AnnotationRefs2):
    pass


class AnyOfItem160(AnyOfItem5):
    pass


class DichroicRef2(BaseModel):
    anyOf: List[AnyOfItem160]
    default: None
    name: str
    type: str


class EmissionFilters1(AnnotationRefs2):
    pass


class AnnotationRefs21(AnnotationRefs2):
    pass


class Properties42(BaseModel):
    excitation_filters: ExcitationFilters1
    dichroic_ref: DichroicRef2
    emission_filters: EmissionFilters1
    annotation_refs: AnnotationRefs21


class LightPath1(BaseModel):
    description: str
    properties: Properties42
    title: str
    type: str


class AnyOfItem161(AnyOfItem124):
    pass


class Attenuation(BaseModel):
    anyOf: List[AnyOfItem161]
    default: None
    max_inclusive: float
    min_inclusive: float
    name: str
    title: str
    type: str


class AnyOfItem162(AnyOfItem22):
    pass


class Wavelength1(BaseModel):
    anyOf: List[AnyOfItem162]
    default: None
    min_exclusive: float
    name: str
    title: str
    type: str


class WavelengthUnit1(PowerUnit):
    pass


class Properties43(BaseModel):
    id: Id
    attenuation: Attenuation
    wavelength: Wavelength1
    wavelength_unit: WavelengthUnit1


class LightSourceSettings1(BaseModel):
    description: str
    properties: Properties43
    title: str
    type: str


class AnyOfItem163(AnyOfItem5):
    pass


class Transform2(BaseModel):
    anyOf: List[AnyOfItem163]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs22(AnnotationRefs):
    pass


class AnyOfItem164(AnyOfItem59):
    pass


class FillColor2(BaseModel):
    anyOf: List[AnyOfItem164]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem165(AnyOfItem5):
    pass


class FillRule2(BaseModel):
    anyOf: List[AnyOfItem165]
    default: None
    name: str
    type: str


class AnyOfItem166(AnyOfItem59):
    pass


class StrokeColor2(BaseModel):
    anyOf: List[AnyOfItem166]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem167(AnyOfItem):
    pass


class StrokeWidth2(BaseModel):
    anyOf: List[AnyOfItem167]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit2(PowerUnit):
    pass


class StrokeDashArray2(StrokeWidth2):
    pass


class Text2(StrokeWidth2):
    pass


class AnyOfItem170(AnyOfItem5):
    pass


class FontFamily2(BaseModel):
    anyOf: List[AnyOfItem170]
    default: None
    name: str
    type: str


class AnyOfItem171(AnyOfItem17):
    pass


class FontSize2(BaseModel):
    anyOf: List[AnyOfItem171]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit2(PowerUnit):
    pass


class AnyOfItem172(AnyOfItem5):
    pass


class FontStyle2(BaseModel):
    anyOf: List[AnyOfItem172]
    default: None
    name: str
    type: str


class AnyOfItem173(AnyOfItem):
    pass


class Locked2(BaseModel):
    anyOf: List[AnyOfItem173]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem174(AnyOfItem17):
    pass


class TheZ2(BaseModel):
    anyOf: List[AnyOfItem174]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT2(TheZ2):
    pass


class TheC2(TheZ2):
    pass


class X1(A00):
    pass


class Y1(A00):
    pass


class X2(A00):
    pass


class Y2(A00):
    pass


class AnyOfItem177(AnyOfItem5):
    pass


class MarkerStart(BaseModel):
    anyOf: List[AnyOfItem177]
    default: None
    name: str
    type: str


class MarkerEnd(MarkerStart):
    pass


class Properties44(BaseModel):
    transform: Transform2
    annotation_refs: AnnotationRefs22
    fill_color: FillColor2
    fill_rule: FillRule2
    stroke_color: StrokeColor2
    stroke_width: StrokeWidth2
    stroke_width_unit: StrokeWidthUnit2
    stroke_dash_array: StrokeDashArray2
    text: Text2
    font_family: FontFamily2
    font_size: FontSize2
    font_size_unit: FontSizeUnit2
    font_style: FontStyle2
    locked: Locked2
    id: Id
    the_z: TheZ2
    the_t: TheT2
    the_c: TheC2
    x1: X1
    y1: Y1
    x2: X2
    y2: Y2
    marker_start: MarkerStart
    marker_end: MarkerEnd


class Line(BaseModel):
    description: str
    properties: Properties44
    required: List[str]
    title: str
    type: str


class AnyOfItem179(AnyOfItem):
    pass


class Description9(BaseModel):
    anyOf: List[AnyOfItem179]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs23(AnnotationRefs):
    pass


class Namespace4(BaseModel):
    anyOf: List[AnyOfItem179]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem181(AnyOfItem11):
    pass


class Annotator4(BaseModel):
    anyOf: List[AnyOfItem181]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Properties45(BaseModel):
    description: Description9
    annotation_refs: AnnotationRefs23
    id: Id
    namespace: Namespace4
    annotator: Annotator4


class ListAnnotation(BaseModel):
    description: str
    properties: Properties45
    title: str
    type: str


class AnyOfItem182(AnyOfItem):
    pass


class Description10(BaseModel):
    anyOf: List[AnyOfItem182]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs24(AnnotationRefs):
    pass


class Namespace5(BaseModel):
    anyOf: List[AnyOfItem182]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem184(AnyOfItem11):
    pass


class Annotator5(BaseModel):
    anyOf: List[AnyOfItem184]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Properties46(BaseModel):
    description: Description10
    annotation_refs: AnnotationRefs24
    id: Id
    namespace: Namespace5
    annotator: Annotator5
    value: Value1


class LongAnnotation(BaseModel):
    description: str
    properties: Properties46
    required: List[str]
    title: str
    type: str


class Value5(BaseModel):
    default: str
    required: bool
    title: str
    type: str


class AnyOfItem185(AnyOfItem):
    pass


class K(BaseModel):
    anyOf: List[AnyOfItem185]
    default: None
    name: str
    title: str
    type: str


class Properties47(BaseModel):
    value: Value5
    k: K


class M(BaseModel):
    properties: Properties47
    title: str
    type: str


class Ms(AnnotationRefs):
    pass


class Properties48(BaseModel):
    ms: Ms


class Map2(BaseModel):
    description: str
    properties: Properties48
    title: str
    type: str


class Description11(BaseModel):
    anyOf: List[AnyOfItem185]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs25(AnnotationRefs):
    pass


class Namespace6(K):
    pass


class AnyOfItem188(AnyOfItem11):
    pass


class Annotator6(BaseModel):
    anyOf: List[AnyOfItem188]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Value6(BinaryFile1):
    pass


class Properties49(BaseModel):
    description: Description11
    annotation_refs: AnnotationRefs25
    id: Id
    namespace: Namespace6
    annotator: Annotator6
    value: Value6


class MapAnnotation(BaseModel):
    description: str
    properties: Properties49
    required: List[str]
    title: str
    type: str


class Marker(BaseModel):
    const: str
    description: str
    enum: List[str]
    title: str
    type: str


class AnyOfItem189(AnyOfItem5):
    pass


class Transform3(BaseModel):
    anyOf: List[AnyOfItem189]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs26(AnnotationRefs):
    pass


class AnyOfItem190(AnyOfItem59):
    pass


class FillColor3(BaseModel):
    anyOf: List[AnyOfItem190]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem191(AnyOfItem5):
    pass


class FillRule3(BaseModel):
    anyOf: List[AnyOfItem191]
    default: None
    name: str
    type: str


class AnyOfItem192(AnyOfItem59):
    pass


class StrokeColor3(BaseModel):
    anyOf: List[AnyOfItem192]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem193(AnyOfItem):
    pass


class StrokeWidth3(BaseModel):
    anyOf: List[AnyOfItem193]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit3(PowerUnit):
    pass


class StrokeDashArray3(StrokeWidth3):
    pass


class Text3(StrokeWidth3):
    pass


class AnyOfItem196(AnyOfItem5):
    pass


class FontFamily3(BaseModel):
    anyOf: List[AnyOfItem196]
    default: None
    name: str
    type: str


class AnyOfItem197(AnyOfItem17):
    pass


class FontSize3(BaseModel):
    anyOf: List[AnyOfItem197]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit3(PowerUnit):
    pass


class AnyOfItem198(AnyOfItem5):
    pass


class FontStyle3(BaseModel):
    anyOf: List[AnyOfItem198]
    default: None
    name: str
    type: str


class AnyOfItem199(AnyOfItem):
    pass


class Locked3(BaseModel):
    anyOf: List[AnyOfItem199]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem200(AnyOfItem17):
    pass


class TheZ3(BaseModel):
    anyOf: List[AnyOfItem200]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT3(TheZ3):
    pass


class TheC3(TheZ3):
    pass


class BinData2(BinaryFile1):
    pass


class Width(A00):
    pass


class Height(A00):
    pass


class Properties50(BaseModel):
    transform: Transform3
    annotation_refs: AnnotationRefs26
    fill_color: FillColor3
    fill_rule: FillRule3
    stroke_color: StrokeColor3
    stroke_width: StrokeWidth3
    stroke_width_unit: StrokeWidthUnit3
    stroke_dash_array: StrokeDashArray3
    text: Text3
    font_family: FontFamily3
    font_size: FontSize3
    font_size_unit: FontSizeUnit3
    font_style: FontStyle3
    locked: Locked3
    id: Id
    the_z: TheZ3
    the_t: TheT3
    the_c: TheC3
    bin_data: BinData2
    x: X
    y: Y
    width: Width
    height: Height


class Mask(BaseModel):
    description: str
    properties: Properties50
    required: List[str]
    title: str
    type: str


class MetadataOnly(BaseModel):
    description: str
    properties: Dict[str, Any]
    title: str
    type: str


class AnyOfItem203(AnyOfItem):
    pass


class Description12(BaseModel):
    anyOf: List[AnyOfItem203]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class RoiRefs2(BaseModel):
    items: Items
    minItems: int
    min_occurs: int
    name: str
    title: str
    type: str


class ExperimenterRef4(BinaryFile1):
    pass


class LightSourceSettingsCombinations(AnnotationRefs2):
    pass


class Type6(Type2):
    pass


class Properties51(BaseModel):
    description: Description12
    roi_refs: RoiRefs2
    experimenter_ref: ExperimenterRef4
    light_source_settings_combinations: LightSourceSettingsCombinations
    id: Id
    type: Type6


class MicrobeamManipulation(BaseModel):
    description: str
    properties: Properties51
    required: List[str]
    title: str
    type: str


class Properties52(Properties1):
    pass


class MicrobeamManipulationRef(BaseModel):
    properties: Properties52
    title: str
    type: str


class MicrobeamManipulationValue(ArcType):
    pass


class Manufacturer9(BaseModel):
    anyOf: List[AnyOfItem203]
    default: None
    name: str
    title: str
    type: str


class Model10(Manufacturer9):
    pass


class SerialNumber9(Manufacturer9):
    pass


class LotNumber9(Manufacturer9):
    pass


class AnyOfItem208(AnyOfItem5):
    pass


class Type7(BaseModel):
    anyOf: List[AnyOfItem208]
    default: None
    name: str
    type: str


class Properties53(BaseModel):
    manufacturer: Manufacturer9
    model: Model10
    serial_number: SerialNumber9
    lot_number: LotNumber9
    type: Type7


class Microscope1(BaseModel):
    description: str
    properties: Properties53
    title: str
    type: str


class MicroscopeType(ArcType):
    pass


class NamingConvention(Binning):
    pass


class AnyOfItem209(AnyOfItem):
    pass


class Manufacturer10(BaseModel):
    anyOf: List[AnyOfItem209]
    default: None
    name: str
    title: str
    type: str


class Model11(Manufacturer10):
    pass


class SerialNumber10(Manufacturer10):
    pass


class LotNumber10(Manufacturer10):
    pass


class AnnotationRefs27(AnnotationRefs2):
    pass


class AnyOfItem213(AnyOfItem5):
    pass


class Correction(BaseModel):
    anyOf: List[AnyOfItem213]
    default: None
    name: str
    type: str


class Immersion(Correction):
    pass


class AnyOfItem215(AnyOfItem):
    pass


class LensNa(BaseModel):
    anyOf: List[AnyOfItem215]
    default: None
    name: str
    title: str
    type: str


class NominalMagnification(LensNa):
    pass


class CalibratedMagnification(LensNa):
    pass


class WorkingDistance(LensNa):
    pass


class WorkingDistanceUnit(PowerUnit):
    pass


class Iris(LensNa):
    pass


class Properties54(BaseModel):
    manufacturer: Manufacturer10
    model: Model11
    serial_number: SerialNumber10
    lot_number: LotNumber10
    annotation_refs: AnnotationRefs27
    id: Id
    correction: Correction
    immersion: Immersion
    lens_na: LensNa
    nominal_magnification: NominalMagnification
    calibrated_magnification: CalibratedMagnification
    working_distance: WorkingDistance
    working_distance_unit: WorkingDistanceUnit
    iris: Iris


class Objective(BaseModel):
    description: str
    properties: Properties54
    title: str
    type: str


class CorrectionCollar(LensNa):
    pass


class AnyOfItem221(AnyOfItem5):
    pass


class Medium(BaseModel):
    anyOf: List[AnyOfItem221]
    default: None
    name: str
    type: str


class AnyOfItem222(AnyOfItem):
    pass


class RefractiveIndex(BaseModel):
    anyOf: List[AnyOfItem222]
    default: None
    name: str
    title: str
    type: str


class Properties55(BaseModel):
    id: Id
    correction_collar: CorrectionCollar
    medium: Medium
    refractive_index: RefractiveIndex


class ObjectiveSettings1(BaseModel):
    description: str
    properties: Properties55
    title: str
    type: str


class ObjectiveSettingsMedium(Binning):
    pass


class ObjectiveCorrection(ArcType):
    pass


class ObjectiveImmersion(ArcType):
    pass


class PixelType(Binning):
    pass


class Channels(AnnotationRefs2):
    pass


class BinDataBlocks(AnnotationRefs2):
    pass


class TiffDataBlocks(AnnotationRefs2):
    pass


class AnyOfItem223(AnyOfItem5):
    pass


class MetadataOnly1(BaseModel):
    anyOf: List[AnyOfItem223]
    default: None
    name: str
    type: str


class Planes(AnnotationRefs2):
    pass


class DimensionOrder(BinaryFile1):
    pass


class Type8(BinaryFile1):
    pass


class AnyOfItem224(AnyOfItem17):
    pass


class SignificantBits(BaseModel):
    anyOf: List[AnyOfItem224]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class AnyOfItem225(AnyOfItem):
    pass


class Interleaved(BaseModel):
    anyOf: List[AnyOfItem225]
    default: None
    name: str
    title: str
    type: str


class BigEndian1(Interleaved):
    pass


class SizeX(Length):
    pass


class SizeY(Length):
    pass


class SizeZ(Length):
    pass


class SizeC(Length):
    pass


class SizeT(Length):
    pass


class AnyOfItem227(AnyOfItem22):
    pass


class PhysicalSizeX(BaseModel):
    anyOf: List[AnyOfItem227]
    default: None
    min_exclusive: float
    name: str
    title: str
    type: str


class PhysicalSizeXUnit(PowerUnit):
    pass


class PhysicalSizeY(PhysicalSizeX):
    pass


class PhysicalSizeYUnit(PowerUnit):
    pass


class PhysicalSizeZ(PhysicalSizeX):
    pass


class PhysicalSizeZUnit(PowerUnit):
    pass


class AnyOfItem230(AnyOfItem):
    pass


class TimeIncrement(BaseModel):
    anyOf: List[AnyOfItem230]
    default: None
    name: str
    title: str
    type: str


class TimeIncrementUnit(PowerUnit):
    pass


class Properties56(BaseModel):
    channels: Channels
    bin_data_blocks: BinDataBlocks
    tiff_data_blocks: TiffDataBlocks
    metadata_only: MetadataOnly1
    planes: Planes
    id: Id
    dimension_order: DimensionOrder
    type: Type8
    significant_bits: SignificantBits
    interleaved: Interleaved
    big_endian: BigEndian1
    size_x: SizeX
    size_y: SizeY
    size_z: SizeZ
    size_c: SizeC
    size_t: SizeT
    physical_size_x: PhysicalSizeX
    physical_size_x_unit: PhysicalSizeXUnit
    physical_size_y: PhysicalSizeY
    physical_size_y_unit: PhysicalSizeYUnit
    physical_size_z: PhysicalSizeZ
    physical_size_z_unit: PhysicalSizeZUnit
    time_increment: TimeIncrement
    time_increment_unit: TimeIncrementUnit


class Pixels1(BaseModel):
    description: str
    properties: Properties56
    required: List[str]
    title: str
    type: str


class PixelsDimensionOrder(ArcType):
    pass


class AnyOfItem231(AnyOfItem59):
    pass


class HashSha1(BaseModel):
    anyOf: List[AnyOfItem231]
    default: None
    format: str
    length: int
    name: str
    title: str
    type: str


class AnnotationRefs28(AnnotationRefs2):
    pass


class TheZ4(Length):
    pass


class TheT4(Length):
    pass


class TheC4(Length):
    pass


class AnyOfItem232(AnyOfItem):
    pass


class DeltaT(BaseModel):
    anyOf: List[AnyOfItem232]
    default: None
    name: str
    title: str
    type: str


class DeltaTUnit(PowerUnit):
    pass


class ExposureTime(DeltaT):
    pass


class ExposureTimeUnit(PowerUnit):
    pass


class PositionX(DeltaT):
    pass


class PositionXUnit(PowerUnit):
    pass


class PositionY(DeltaT):
    pass


class PositionYUnit(PowerUnit):
    pass


class PositionZ(DeltaT):
    pass


class PositionZUnit(PowerUnit):
    pass


class Properties57(BaseModel):
    hash_sha1: HashSha1
    annotation_refs: AnnotationRefs28
    the_z: TheZ4
    the_t: TheT4
    the_c: TheC4
    delta_t: DeltaT
    delta_t_unit: DeltaTUnit
    exposure_time: ExposureTime
    exposure_time_unit: ExposureTimeUnit
    position_x: PositionX
    position_x_unit: PositionXUnit
    position_y: PositionY
    position_y_unit: PositionYUnit
    position_z: PositionZ
    position_z_unit: PositionZUnit


class Plane(BaseModel):
    description: str
    properties: Properties57
    required: List[str]
    title: str
    type: str


class Description13(BaseModel):
    anyOf: List[AnyOfItem232]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class Wells(AnnotationRefs2):
    pass


class AnnotationRefs29(AnnotationRefs2):
    pass


class PlateAcquisitions(AnnotationRefs2):
    pass


class Name5(DeltaT):
    pass


class Status(DeltaT):
    pass


class ExternalIdentifier(DeltaT):
    pass


class AnyOfItem241(AnyOfItem5):
    pass


class ColumnNamingConvention(BaseModel):
    anyOf: List[AnyOfItem241]
    default: None
    name: str
    type: str


class RowNamingConvention(ColumnNamingConvention):
    pass


class AnyOfItem243(AnyOfItem):
    pass


class WellOriginX(BaseModel):
    anyOf: List[AnyOfItem243]
    default: None
    name: str
    title: str
    type: str


class WellOriginXUnit(PowerUnit):
    pass


class WellOriginY(WellOriginX):
    pass


class WellOriginYUnit(PowerUnit):
    pass


class AnyOfItem245(AnyOfItem17):
    pass


class Rows(BaseModel):
    anyOf: List[AnyOfItem245]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class Columns(Rows):
    pass


class FieldIndex(Rows):
    pass


class Properties58(BaseModel):
    description: Description13
    wells: Wells
    annotation_refs: AnnotationRefs29
    plate_acquisitions: PlateAcquisitions
    id: Id
    name: Name5
    status: Status
    external_identifier: ExternalIdentifier
    column_naming_convention: ColumnNamingConvention
    row_naming_convention: RowNamingConvention
    well_origin_x: WellOriginX
    well_origin_x_unit: WellOriginXUnit
    well_origin_y: WellOriginY
    well_origin_y_unit: WellOriginYUnit
    rows: Rows
    columns: Columns
    field_index: FieldIndex


class Plate(BaseModel):
    description: str
    properties: Properties58
    title: str
    type: str


class AnyOfItem248(AnyOfItem):
    pass


class Description14(BaseModel):
    anyOf: List[AnyOfItem248]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class WellSampleRefs(AnnotationRefs2):
    pass


class AnnotationRefs30(AnnotationRefs2):
    pass


class Name6(BaseModel):
    anyOf: List[AnyOfItem248]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem250(AnyOfItem59):
    pass


class EndTime(BaseModel):
    anyOf: List[AnyOfItem250]
    default: None
    name: str
    title: str
    type: str


class StartTime(EndTime):
    pass


class AnyOfItem252(AnyOfItem17):
    pass


class MaximumFieldCount(BaseModel):
    anyOf: List[AnyOfItem252]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class Properties59(BaseModel):
    description: Description14
    well_sample_refs: WellSampleRefs
    annotation_refs: AnnotationRefs30
    id: Id
    name: Name6
    end_time: EndTime
    start_time: StartTime
    maximum_field_count: MaximumFieldCount


class PlateAcquisition(BaseModel):
    description: str
    properties: Properties59
    title: str
    type: str


class Properties60(Properties1):
    pass


class PlateRef(BaseModel):
    properties: Properties60
    title: str
    type: str


class AnyOfItem253(AnyOfItem5):
    pass


class Transform4(BaseModel):
    anyOf: List[AnyOfItem253]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs31(AnnotationRefs):
    pass


class AnyOfItem254(AnyOfItem59):
    pass


class FillColor4(BaseModel):
    anyOf: List[AnyOfItem254]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem255(AnyOfItem5):
    pass


class FillRule4(BaseModel):
    anyOf: List[AnyOfItem255]
    default: None
    name: str
    type: str


class AnyOfItem256(AnyOfItem59):
    pass


class StrokeColor4(BaseModel):
    anyOf: List[AnyOfItem256]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem257(AnyOfItem):
    pass


class StrokeWidth4(BaseModel):
    anyOf: List[AnyOfItem257]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit4(PowerUnit):
    pass


class StrokeDashArray4(StrokeWidth4):
    pass


class Text4(StrokeWidth4):
    pass


class AnyOfItem260(AnyOfItem5):
    pass


class FontFamily4(BaseModel):
    anyOf: List[AnyOfItem260]
    default: None
    name: str
    type: str


class AnyOfItem261(AnyOfItem17):
    pass


class FontSize4(BaseModel):
    anyOf: List[AnyOfItem261]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit4(PowerUnit):
    pass


class AnyOfItem262(AnyOfItem5):
    pass


class FontStyle4(BaseModel):
    anyOf: List[AnyOfItem262]
    default: None
    name: str
    type: str


class AnyOfItem263(AnyOfItem):
    pass


class Locked4(BaseModel):
    anyOf: List[AnyOfItem263]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem264(AnyOfItem17):
    pass


class TheZ5(BaseModel):
    anyOf: List[AnyOfItem264]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT5(TheZ5):
    pass


class TheC5(TheZ5):
    pass


class Properties61(BaseModel):
    transform: Transform4
    annotation_refs: AnnotationRefs31
    fill_color: FillColor4
    fill_rule: FillRule4
    stroke_color: StrokeColor4
    stroke_width: StrokeWidth4
    stroke_width_unit: StrokeWidthUnit4
    stroke_dash_array: StrokeDashArray4
    text: Text4
    font_family: FontFamily4
    font_size: FontSize4
    font_size_unit: FontSizeUnit4
    font_style: FontStyle4
    locked: Locked4
    id: Id
    the_z: TheZ5
    the_t: TheT5
    the_c: TheC5
    x: X
    y: Y


class Point(BaseModel):
    description: str
    properties: Properties61
    required: List[str]
    title: str
    type: str


class AnyOfItem267(AnyOfItem5):
    pass


class Transform5(BaseModel):
    anyOf: List[AnyOfItem267]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs32(AnnotationRefs):
    pass


class AnyOfItem268(AnyOfItem59):
    pass


class FillColor5(BaseModel):
    anyOf: List[AnyOfItem268]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem269(AnyOfItem5):
    pass


class FillRule5(BaseModel):
    anyOf: List[AnyOfItem269]
    default: None
    name: str
    type: str


class AnyOfItem270(AnyOfItem59):
    pass


class StrokeColor5(BaseModel):
    anyOf: List[AnyOfItem270]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem271(AnyOfItem):
    pass


class StrokeWidth5(BaseModel):
    anyOf: List[AnyOfItem271]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit5(PowerUnit):
    pass


class StrokeDashArray5(StrokeWidth5):
    pass


class Text5(StrokeWidth5):
    pass


class AnyOfItem274(AnyOfItem5):
    pass


class FontFamily5(BaseModel):
    anyOf: List[AnyOfItem274]
    default: None
    name: str
    type: str


class AnyOfItem275(AnyOfItem17):
    pass


class FontSize5(BaseModel):
    anyOf: List[AnyOfItem275]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit5(PowerUnit):
    pass


class AnyOfItem276(AnyOfItem5):
    pass


class FontStyle5(BaseModel):
    anyOf: List[AnyOfItem276]
    default: None
    name: str
    type: str


class AnyOfItem277(AnyOfItem):
    pass


class Locked5(BaseModel):
    anyOf: List[AnyOfItem277]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem278(AnyOfItem17):
    pass


class TheZ6(BaseModel):
    anyOf: List[AnyOfItem278]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT6(TheZ6):
    pass


class TheC6(TheZ6):
    pass


class Points(A00):
    pass


class Properties62(BaseModel):
    transform: Transform5
    annotation_refs: AnnotationRefs32
    fill_color: FillColor5
    fill_rule: FillRule5
    stroke_color: StrokeColor5
    stroke_width: StrokeWidth5
    stroke_width_unit: StrokeWidthUnit5
    stroke_dash_array: StrokeDashArray5
    text: Text5
    font_family: FontFamily5
    font_size: FontSize5
    font_size_unit: FontSizeUnit5
    font_style: FontStyle5
    locked: Locked5
    id: Id
    the_z: TheZ6
    the_t: TheT6
    the_c: TheC6
    points: Points


class Polygon(BaseModel):
    description: str
    properties: Properties62
    required: List[str]
    title: str
    type: str


class AnyOfItem281(AnyOfItem5):
    pass


class Transform6(BaseModel):
    anyOf: List[AnyOfItem281]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs33(AnnotationRefs):
    pass


class AnyOfItem282(AnyOfItem59):
    pass


class FillColor6(BaseModel):
    anyOf: List[AnyOfItem282]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem283(AnyOfItem5):
    pass


class FillRule6(BaseModel):
    anyOf: List[AnyOfItem283]
    default: None
    name: str
    type: str


class AnyOfItem284(AnyOfItem59):
    pass


class StrokeColor6(BaseModel):
    anyOf: List[AnyOfItem284]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem285(AnyOfItem):
    pass


class StrokeWidth6(BaseModel):
    anyOf: List[AnyOfItem285]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit6(PowerUnit):
    pass


class StrokeDashArray6(StrokeWidth6):
    pass


class Text6(StrokeWidth6):
    pass


class AnyOfItem288(AnyOfItem5):
    pass


class FontFamily6(BaseModel):
    anyOf: List[AnyOfItem288]
    default: None
    name: str
    type: str


class AnyOfItem289(AnyOfItem17):
    pass


class FontSize6(BaseModel):
    anyOf: List[AnyOfItem289]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit6(PowerUnit):
    pass


class AnyOfItem290(AnyOfItem5):
    pass


class FontStyle6(BaseModel):
    anyOf: List[AnyOfItem290]
    default: None
    name: str
    type: str


class AnyOfItem291(AnyOfItem):
    pass


class Locked6(BaseModel):
    anyOf: List[AnyOfItem291]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem292(AnyOfItem17):
    pass


class TheZ7(BaseModel):
    anyOf: List[AnyOfItem292]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT7(TheZ7):
    pass


class TheC7(TheZ7):
    pass


class AnyOfItem295(AnyOfItem5):
    pass


class MarkerStart1(BaseModel):
    anyOf: List[AnyOfItem295]
    default: None
    name: str
    type: str


class MarkerEnd1(MarkerStart1):
    pass


class Properties63(BaseModel):
    transform: Transform6
    annotation_refs: AnnotationRefs33
    fill_color: FillColor6
    fill_rule: FillRule6
    stroke_color: StrokeColor6
    stroke_width: StrokeWidth6
    stroke_width_unit: StrokeWidthUnit6
    stroke_dash_array: StrokeDashArray6
    text: Text6
    font_family: FontFamily6
    font_size: FontSize6
    font_size_unit: FontSizeUnit6
    font_style: FontStyle6
    locked: Locked6
    id: Id
    the_z: TheZ7
    the_t: TheT7
    the_c: TheC7
    points: Points
    marker_start: MarkerStart1
    marker_end: MarkerEnd1


class Polyline(BaseModel):
    description: str
    properties: Properties63
    required: List[str]
    title: str
    type: str


class AnyOfItem297(AnyOfItem):
    pass


class Description15(BaseModel):
    anyOf: List[AnyOfItem297]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class AnyOfItem298(AnyOfItem5):
    pass


class ExperimenterRef5(BaseModel):
    anyOf: List[AnyOfItem298]
    default: None
    name: str
    type: str


class ExperimenterGroupRef3(ExperimenterRef5):
    pass


class DatasetRefs(AnnotationRefs2):
    pass


class AnnotationRefs34(AnnotationRefs2):
    pass


class AnyOfItem300(AnyOfItem):
    pass


class Name7(BaseModel):
    anyOf: List[AnyOfItem300]
    default: None
    name: str
    title: str
    type: str


class Properties64(BaseModel):
    description: Description15
    experimenter_ref: ExperimenterRef5
    experimenter_group_ref: ExperimenterGroupRef3
    dataset_refs: DatasetRefs
    annotation_refs: AnnotationRefs34
    name: Name7
    id: Id


class Project(BaseModel):
    description: str
    properties: Properties64
    title: str
    type: str


class Properties65(Properties1):
    pass


class Pump1(BaseModel):
    description: str
    properties: Properties65
    title: str
    type: str


class Union(BinaryFile1):
    pass


class AnnotationRefs35(AnnotationRefs2):
    pass


class Description16(BaseModel):
    anyOf: List[AnyOfItem300]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class Name8(Name7):
    pass


class Properties66(BaseModel):
    union: Union
    annotation_refs: AnnotationRefs35
    description: Description16
    id: Id
    name: Name8


class ROI(BaseModel):
    description: str
    properties: Properties66
    title: str
    type: str


class Properties67(Properties1):
    pass


class ROIRef(BaseModel):
    properties: Properties67
    title: str
    type: str


class Description17(Description16):
    pass


class AnnotationRefs36(AnnotationRefs2):
    pass


class Name9(Name7):
    pass


class ReagentIdentifier(Name7):
    pass


class Properties68(BaseModel):
    description: Description17
    annotation_refs: AnnotationRefs36
    id: Id
    name: Name9
    reagent_identifier: ReagentIdentifier


class Reagent(BaseModel):
    description: str
    properties: Properties68
    title: str
    type: str


class Properties69(Properties1):
    pass


class ReagentRef(BaseModel):
    properties: Properties69
    title: str
    type: str


class AnyOfItem306(AnyOfItem5):
    pass


class Transform7(BaseModel):
    anyOf: List[AnyOfItem306]
    default: None
    name: str
    namespace: str
    type: str


class AnnotationRefs37(AnnotationRefs):
    pass


class AnyOfItem307(AnyOfItem59):
    pass


class FillColor7(BaseModel):
    anyOf: List[AnyOfItem307]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem308(AnyOfItem5):
    pass


class FillRule7(BaseModel):
    anyOf: List[AnyOfItem308]
    default: None
    name: str
    type: str


class AnyOfItem309(AnyOfItem59):
    pass


class StrokeColor7(BaseModel):
    anyOf: List[AnyOfItem309]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem310(AnyOfItem):
    pass


class StrokeWidth7(BaseModel):
    anyOf: List[AnyOfItem310]
    default: None
    name: str
    title: str
    type: str


class StrokeWidthUnit7(PowerUnit):
    pass


class StrokeDashArray7(StrokeWidth7):
    pass


class Text7(StrokeWidth7):
    pass


class AnyOfItem313(AnyOfItem5):
    pass


class FontFamily7(BaseModel):
    anyOf: List[AnyOfItem313]
    default: None
    name: str
    type: str


class AnyOfItem314(AnyOfItem17):
    pass


class FontSize7(BaseModel):
    anyOf: List[AnyOfItem314]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class FontSizeUnit7(PowerUnit):
    pass


class AnyOfItem315(AnyOfItem5):
    pass


class FontStyle7(BaseModel):
    anyOf: List[AnyOfItem315]
    default: None
    name: str
    type: str


class AnyOfItem316(AnyOfItem):
    pass


class Locked7(BaseModel):
    anyOf: List[AnyOfItem316]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem317(AnyOfItem17):
    pass


class TheZ8(BaseModel):
    anyOf: List[AnyOfItem317]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class TheT8(TheZ8):
    pass


class TheC8(TheZ8):
    pass


class Properties70(BaseModel):
    transform: Transform7
    annotation_refs: AnnotationRefs37
    fill_color: FillColor7
    fill_rule: FillRule7
    stroke_color: StrokeColor7
    stroke_width: StrokeWidth7
    stroke_width_unit: StrokeWidthUnit7
    stroke_dash_array: StrokeDashArray7
    text: Text7
    font_family: FontFamily7
    font_size: FontSize7
    font_size_unit: FontSizeUnit7
    font_style: FontStyle7
    locked: Locked7
    id: Id
    the_z: TheZ8
    the_t: TheT8
    the_c: TheC8
    x: X
    y: Y
    width: Width
    height: Height


class Rectangle(BaseModel):
    description: str
    properties: Properties70
    required: List[str]
    title: str
    type: str


class AnyOfItem320(AnyOfItem):
    pass


class RightsHolder(BaseModel):
    anyOf: List[AnyOfItem320]
    default: None
    name: str
    title: str
    type: str
    white_space: str


class RightsHeld(RightsHolder):
    pass


class Properties71(BaseModel):
    rights_holder: RightsHolder
    rights_held: RightsHeld


class Rights(BaseModel):
    description: str
    properties: Properties71
    title: str
    type: str


class Description18(RightsHolder):
    pass


class Reagents(AnnotationRefs2):
    pass


class PlateRefs(AnnotationRefs2):
    pass


class AnnotationRefs38(AnnotationRefs2):
    pass


class Name10(BaseModel):
    anyOf: List[AnyOfItem320]
    default: None
    name: str
    title: str
    type: str


class ProtocolIdentifier(Name10):
    pass


class ProtocolDescription(Name10):
    pass


class ReagentSetDescription(Name10):
    pass


class ReagentSetIdentifier(Name10):
    pass


class Type9(Name10):
    pass


class Properties72(BaseModel):
    description: Description18
    reagents: Reagents
    plate_refs: PlateRefs
    annotation_refs: AnnotationRefs38
    id: Id
    name: Name10
    protocol_identifier: ProtocolIdentifier
    protocol_description: ProtocolDescription
    reagent_set_description: ReagentSetDescription
    reagent_set_identifier: ReagentSetIdentifier
    type: Type9


class Screen(BaseModel):
    description: str
    properties: Properties72
    title: str
    type: str


class ShapeFillRule(Binning):
    pass


class ShapeFontFamily(Binning):
    pass


class ShapeFontStyle(Binning):
    pass


class Name11(A00):
    pass


class X6(Name10):
    pass


class XUnit(PowerUnit):
    pass


class Y6(Name10):
    pass


class YUnit(PowerUnit):
    pass


class Z(Name10):
    pass


class ZUnit(PowerUnit):
    pass


class Properties73(BaseModel):
    name: Name11
    x: X6
    x_unit: XUnit
    y: Y6
    y_unit: YUnit
    z: Z
    z_unit: ZUnit


class StageLabel1(BaseModel):
    description: str
    properties: Properties73
    required: List[str]
    title: str
    type: str


class XmlAnnotations(AnnotationRefs2):
    pass


class FileAnnotations(AnnotationRefs2):
    pass


class ListAnnotations(AnnotationRefs2):
    pass


class LongAnnotations(AnnotationRefs2):
    pass


class DoubleAnnotations(AnnotationRefs2):
    pass


class CommentAnnotations(AnnotationRefs2):
    pass


class BooleanAnnotations(AnnotationRefs2):
    pass


class TimestampAnnotations(AnnotationRefs2):
    pass


class TagAnnotations(AnnotationRefs2):
    pass


class TermAnnotations(AnnotationRefs2):
    pass


class MapAnnotations(AnnotationRefs2):
    pass


class Properties74(BaseModel):
    xml_annotations: XmlAnnotations
    file_annotations: FileAnnotations
    list_annotations: ListAnnotations
    long_annotations: LongAnnotations
    double_annotations: DoubleAnnotations
    comment_annotations: CommentAnnotations
    boolean_annotations: BooleanAnnotations
    timestamp_annotations: TimestampAnnotations
    tag_annotations: TagAnnotations
    term_annotations: TermAnnotations
    map_annotations: MapAnnotations


class StructuredAnnotations(BaseModel):
    description: str
    properties: Properties74
    title: str
    type: str


class Description19(BaseModel):
    anyOf: List[AnyOfItem320]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs39(AnnotationRefs):
    pass


class Namespace7(Name10):
    pass


class AnyOfItem334(AnyOfItem11):
    pass


class Annotator7(BaseModel):
    anyOf: List[AnyOfItem334]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Value7(A00):
    pass


class Properties75(BaseModel):
    description: Description19
    annotation_refs: AnnotationRefs39
    id: Id
    namespace: Namespace7
    annotator: Annotator7
    value: Value7


class TagAnnotation(BaseModel):
    description: str
    properties: Properties75
    required: List[str]
    title: str
    type: str


class AnyOfItem335(AnyOfItem):
    pass


class Description20(BaseModel):
    anyOf: List[AnyOfItem335]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs40(AnnotationRefs):
    pass


class Namespace8(BaseModel):
    anyOf: List[AnyOfItem335]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem337(AnyOfItem11):
    pass


class Annotator8(BaseModel):
    anyOf: List[AnyOfItem337]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Properties76(BaseModel):
    description: Description20
    annotation_refs: AnnotationRefs40
    id: Id
    namespace: Namespace8
    annotator: Annotator8
    value: Value7


class TermAnnotation(BaseModel):
    description: str
    properties: Properties76
    required: List[str]
    title: str
    type: str


class AnyOfItem338(AnyOfItem5):
    pass


class Uuid1(BaseModel):
    anyOf: List[AnyOfItem338]
    default: None
    name: str
    type: str


class Ifd(BaseModel):
    default: int
    min_inclusive: int
    minimum: int
    name: str
    title: str
    type: str


class FirstZ(Ifd):
    pass


class FirstT(Ifd):
    pass


class FirstC(Ifd):
    pass


class AnyOfItem339(AnyOfItem17):
    pass


class PlaneCount(BaseModel):
    anyOf: List[AnyOfItem339]
    default: None
    min_inclusive: int
    name: str
    title: str
    type: str


class Properties77(BaseModel):
    uuid: Uuid1
    ifd: Ifd
    first_z: FirstZ
    first_t: FirstT
    first_c: FirstC
    plane_count: PlaneCount


class TiffData(BaseModel):
    description: str
    properties: Properties77
    title: str
    type: str


class AnyOfItem340(AnyOfItem):
    pass


class Description21(BaseModel):
    anyOf: List[AnyOfItem340]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs41(AnnotationRefs):
    pass


class Namespace9(BaseModel):
    anyOf: List[AnyOfItem340]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem342(AnyOfItem11):
    pass


class Annotator9(BaseModel):
    anyOf: List[AnyOfItem342]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Value9(BaseModel):
    format: str
    name: str
    required: bool
    title: str
    type: str


class Properties78(BaseModel):
    description: Description21
    annotation_refs: AnnotationRefs41
    id: Id
    namespace: Namespace9
    annotator: Annotator9
    value: Value9


class TimestampAnnotation(BaseModel):
    description: str
    properties: Properties78
    required: List[str]
    title: str
    type: str


class AnyOfItem343(AnyOfItem22):
    pass


class CutIn(BaseModel):
    anyOf: List[AnyOfItem343]
    default: None
    min_exclusive: float
    name: str
    title: str
    type: str


class CutInUnit(PowerUnit):
    pass


class CutOut(CutIn):
    pass


class CutOutUnit(PowerUnit):
    pass


class AnyOfItem345(BaseModel):
    minimum: Optional[float] = None
    type: str


class CutInTolerance(BaseModel):
    anyOf: List[AnyOfItem345]
    default: None
    min_inclusive: float
    name: str
    title: str
    type: str


class CutInToleranceUnit(PowerUnit):
    pass


class CutOutTolerance(CutInTolerance):
    pass


class CutOutToleranceUnit(PowerUnit):
    pass


class AnyOfItem347(AnyOfItem124):
    pass


class Transmittance(BaseModel):
    anyOf: List[AnyOfItem347]
    default: None
    max_inclusive: float
    min_inclusive: float
    name: str
    title: str
    type: str


class Properties79(BaseModel):
    cut_in: CutIn
    cut_in_unit: CutInUnit
    cut_out: CutOut
    cut_out_unit: CutOutUnit
    cut_in_tolerance: CutInTolerance
    cut_in_tolerance_unit: CutInToleranceUnit
    cut_out_tolerance: CutOutTolerance
    cut_out_tolerance_unit: CutOutToleranceUnit
    transmittance: Transmittance


class TransmittanceRange1(BaseModel):
    description: str
    properties: Properties79
    title: str
    type: str


class Value10(BaseModel):
    default: str
    pattern: str
    required: bool
    title: str
    type: str


class AnyOfItem348(AnyOfItem):
    pass


class FileName1(BaseModel):
    anyOf: List[AnyOfItem348]
    default: None
    name: str
    title: str
    type: str


class Properties80(BaseModel):
    value: Value10
    file_name: FileName1


class UUID(BaseModel):
    description: str
    properties: Properties80
    title: str
    type: str


class Labels(AnnotationRefs2):
    pass


class Polygons(AnnotationRefs2):
    pass


class Polylines(AnnotationRefs2):
    pass


class Lines(AnnotationRefs2):
    pass


class Ellipses(AnnotationRefs2):
    pass


class Points2(AnnotationRefs2):
    pass


class Masks(AnnotationRefs2):
    pass


class Rectangles(AnnotationRefs2):
    pass


class Properties81(BaseModel):
    labels: Labels
    polygons: Polygons
    polylines: Polylines
    lines: Lines
    ellipses: Ellipses
    points: Points2
    masks: Masks
    rectangles: Rectangles


class Union1(BaseModel):
    properties: Properties81
    title: str
    type: str


class UnitsElectricPotential(Binning):
    pass


class UnitsFrequency(Binning):
    pass


class UnitsLength(Binning):
    pass


class UnitsPower(Binning):
    pass


class UnitsPressure(Binning):
    pass


class UnitsTemperature(Binning):
    pass


class UnitsTime(Binning):
    pass


class AnyElements(BaseModel):
    items: Dict[str, Any]
    namespace: str
    title: str
    type: str


class Properties82(BaseModel):
    any_elements: AnyElements


class Value11(BaseModel):
    properties: Properties82
    title: str
    type: str


class WellSamples(AnnotationRefs2):
    pass


class AnyOfItem349(AnyOfItem5):
    pass


class ReagentRef1(BaseModel):
    anyOf: List[AnyOfItem349]
    default: None
    name: str
    type: str


class AnnotationRefs42(AnnotationRefs2):
    pass


class Column(Length):
    pass


class Row(Length):
    pass


class AnyOfItem350(AnyOfItem):
    pass


class ExternalDescription(BaseModel):
    anyOf: List[AnyOfItem350]
    default: None
    name: str
    title: str
    type: str


class ExternalIdentifier1(ExternalDescription):
    pass


class Type10(ExternalDescription):
    pass


class Properties83(BaseModel):
    well_samples: WellSamples
    reagent_ref: ReagentRef1
    annotation_refs: AnnotationRefs42
    id: Id
    column: Column
    row: Row
    external_description: ExternalDescription
    external_identifier: ExternalIdentifier1
    type: Type10
    color: Color


class Well(BaseModel):
    description: str
    properties: Properties83
    required: List[str]
    title: str
    type: str


class AnyOfItem353(AnyOfItem5):
    pass


class ImageRef1(BaseModel):
    anyOf: List[AnyOfItem353]
    default: None
    name: str
    type: str


class AnyOfItem354(AnyOfItem):
    pass


class PositionX1(BaseModel):
    anyOf: List[AnyOfItem354]
    default: None
    name: str
    title: str
    type: str


class PositionXUnit1(PowerUnit):
    pass


class PositionY1(PositionX1):
    pass


class PositionYUnit1(PowerUnit):
    pass


class AnyOfItem356(AnyOfItem59):
    pass


class Timepoint(BaseModel):
    anyOf: List[AnyOfItem356]
    default: None
    name: str
    title: str
    type: str


class Index(Length):
    pass


class Properties84(BaseModel):
    image_ref: ImageRef1
    id: Id
    position_x: PositionX1
    position_x_unit: PositionXUnit1
    position_y: PositionY1
    position_y_unit: PositionYUnit1
    timepoint: Timepoint
    index: Index


class WellSample(BaseModel):
    description: str
    properties: Properties84
    required: List[str]
    title: str
    type: str


class Properties85(Properties1):
    pass


class WellSampleRef(BaseModel):
    description: str
    properties: Properties85
    title: str
    type: str


class AnyOfItem357(AnyOfItem):
    pass


class Description22(BaseModel):
    anyOf: List[AnyOfItem357]
    default: None
    name: str
    namespace: str
    title: str
    type: str
    white_space: str


class AnnotationRefs43(AnnotationRefs):
    pass


class Namespace10(BaseModel):
    anyOf: List[AnyOfItem357]
    default: None
    name: str
    title: str
    type: str


class AnyOfItem359(AnyOfItem11):
    pass


class Annotator10(BaseModel):
    anyOf: List[AnyOfItem359]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class Value12(BinaryFile1):
    pass


class Properties86(BaseModel):
    description: Description22
    annotation_refs: AnnotationRefs43
    id: Id
    namespace: Namespace10
    annotator: Annotator10
    value: Value12


class XMLAnnotation(BaseModel):
    description: str
    properties: Properties86
    required: List[str]
    title: str
    type: str


class FieldDefs(BaseModel):
    AffineTransform: AffineTransform
    AnnotationRef: AnnotationRef
    Arc: Arc
    Arc_Type: ArcType
    BinData: BinData
    BinData_Compression: BinDataCompression
    BinaryFile: BinaryFile
    BinaryOnly: BinaryOnly
    Binning: Binning
    BooleanAnnotation: BooleanAnnotation
    Channel: Channel
    Channel_AcquisitionMode: ChannelAcquisitionMode
    Channel_ContrastMethod: ChannelContrastMethod
    Channel_IlluminationType: ChannelIlluminationType
    CommentAnnotation: CommentAnnotation
    Dataset: Dataset
    DatasetRef: DatasetRef
    Detector: Detector
    DetectorSettings: DetectorSettings1
    Detector_Type: DetectorType
    Dichroic: Dichroic
    DichroicRef: DichroicRef
    DoubleAnnotation: DoubleAnnotation
    Ellipse: Ellipse
    Experiment: Experiment
    ExperimentRef: ExperimentRef
    Experiment_value: ExperimentValue
    Experimenter: Experimenter
    ExperimenterGroup: ExperimenterGroup
    ExperimenterGroupRef: ExperimenterGroupRef1
    ExperimenterRef: ExperimenterRef2
    External: External1
    External_Compression: ExternalCompression
    Filament: Filament
    Filament_Type: FilamentType
    FileAnnotation: FileAnnotation
    Filter: Filter
    FilterRef: FilterRef
    FilterSet: FilterSet
    FilterSetRef: FilterSetRef1
    Filter_Type: FilterType
    Folder: Folder
    FolderRef: FolderRef
    GenericExcitationSource: GenericExcitationSource
    Image: Image
    ImageRef: ImageRef
    ImagingEnvironment: ImagingEnvironment1
    Instrument: Instrument
    InstrumentRef: InstrumentRef1
    Label: Label
    Laser: Laser
    Laser_LaserMedium: LaserLaserMedium
    Laser_Pulse: LaserPulse
    Laser_Type: LaserType
    Leader: Leader
    LightEmittingDiode: LightEmittingDiode
    LightPath: LightPath1
    LightSourceSettings: LightSourceSettings1
    Line: Line
    ListAnnotation: ListAnnotation
    LongAnnotation: LongAnnotation
    M: M
    Map: Map2
    MapAnnotation: MapAnnotation
    Marker: Marker
    Mask: Mask
    MetadataOnly: MetadataOnly
    MicrobeamManipulation: MicrobeamManipulation
    MicrobeamManipulationRef: MicrobeamManipulationRef
    MicrobeamManipulation_value: MicrobeamManipulationValue
    Microscope: Microscope1
    Microscope_Type: MicroscopeType
    NamingConvention: NamingConvention
    Objective: Objective
    ObjectiveSettings: ObjectiveSettings1
    ObjectiveSettings_Medium: ObjectiveSettingsMedium
    Objective_Correction: ObjectiveCorrection
    Objective_Immersion: ObjectiveImmersion
    PixelType: PixelType
    Pixels: Pixels1
    Pixels_DimensionOrder: PixelsDimensionOrder
    Plane: Plane
    Plate: Plate
    PlateAcquisition: PlateAcquisition
    PlateRef: PlateRef
    Point: Point
    Polygon: Polygon
    Polyline: Polyline
    Project: Project
    Pump: Pump1
    ROI: ROI
    ROIRef: ROIRef
    Reagent: Reagent
    ReagentRef: ReagentRef
    Rectangle: Rectangle
    Rights: Rights
    Screen: Screen
    Shape_FillRule: ShapeFillRule
    Shape_FontFamily: ShapeFontFamily
    Shape_FontStyle: ShapeFontStyle
    StageLabel: StageLabel1
    StructuredAnnotations: StructuredAnnotations
    TagAnnotation: TagAnnotation
    TermAnnotation: TermAnnotation
    TiffData: TiffData
    TimestampAnnotation: TimestampAnnotation
    TransmittanceRange: TransmittanceRange1
    UUID: UUID
    Union: Union1
    UnitsElectricPotential: UnitsElectricPotential
    UnitsFrequency: UnitsFrequency
    UnitsLength: UnitsLength
    UnitsPower: UnitsPower
    UnitsPressure: UnitsPressure
    UnitsTemperature: UnitsTemperature
    UnitsTime: UnitsTime
    Value: Value11
    Well: Well
    WellSample: WellSample
    WellSampleRef: WellSampleRef
    XMLAnnotation: XMLAnnotation


class AnyOfItem360(AnyOfItem5):
    pass


class Rights1(BaseModel):
    anyOf: List[AnyOfItem360]
    default: None
    name: str
    type: str


class Projects(AnnotationRefs2):
    pass


class Datasets(AnnotationRefs2):
    pass


class Folders(AnnotationRefs2):
    pass


class Experiments(AnnotationRefs2):
    pass


class Plates(AnnotationRefs2):
    pass


class Screens(AnnotationRefs2):
    pass


class Experimenters(AnnotationRefs2):
    pass


class ExperimenterGroups(AnnotationRefs2):
    pass


class Instruments(AnnotationRefs2):
    pass


class Images(AnnotationRefs2):
    pass


class StructuredAnnotations1(BaseModel):
    anyOf: List[AnyOfItem360]
    name: str
    type: str


class Rois(AnnotationRefs2):
    pass


class BinaryOnly1(Rights1):
    pass


class AnyOfItem363(AnyOfItem11):
    pass


class Uuid2(BaseModel):
    anyOf: List[AnyOfItem363]
    default: None
    name: str
    pattern: str
    title: str
    type: str


class AnyOfItem364(AnyOfItem):
    pass


class Creator(BaseModel):
    anyOf: List[AnyOfItem364]
    default: None
    name: str
    title: str
    type: str


class Properties87(BaseModel):
    rights: Rights1
    projects: Projects
    datasets: Datasets
    folders: Folders
    experiments: Experiments
    plates: Plates
    screens: Screens
    experimenters: Experimenters
    experimenter_groups: ExperimenterGroups
    instruments: Instruments
    images: Images
    structured_annotations: StructuredAnnotations1
    rois: Rois
    binary_only: BinaryOnly1
    uuid: Uuid2
    creator: Creator


class Model(BaseModel):
    field_defs: FieldDefs = Field(..., alias='$defs')
    description: str
    properties: Properties87
    title: str
    type: str
